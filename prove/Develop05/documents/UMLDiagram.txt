@startuml

class IApplication
{
    + {static} READ_RESPONSE(Configuration configuration) String
    + BuildDefaultConfiguration() void
    + ReadConfiguration() Configuration
    + Run() void
    + DisplayMainMenu() void
    + ProcessResponse(String response) Boolean
    + AddSimpleGoal() void
    + AddEternalGoal() void
    + AddChecklistGoal() void
    + ReuseCompletedGoal() void
    + ListCurrentGoals() void
    + ListAllGoals() void
    + SaveGoals() void
    + LoadGoals() void
    + ReportEvent() void
}

class Application
{
    + Running { get } Boolean
    - Running { set } Boolean
    - Goals { get, set } Goals
    - ConfigurationFilename { get, set } String
    - Configuration { get, set } Configuration

    + Application()
    # Init() void
    + Run() void
    + BuildDefaultConfiguration() void
    + ReadConfiguration() Configuration
    + DisplayMainMenu() void
    + ProcessResponse(String response) Boolean
    + AddSimpleGoal() void
    + AddEternalGoal() void
    + AddChecklistGoal() void
    + ReuseCompletedGoal() void
    + ListCurrentGoals() void
    + ListAllGoals() void
    + SaveGoals() void
    + LoadGoals() void
    + ReportEvent() void
}
Application <|-- IApplication
Configuration *-- Application
Goals *-- Application

class SerializableKeyValuePair<TKey, TValue>
{
    + Key { get, set } TKey
    + Value { get, set } TValue
}

class SERIALIZABLE_KEY_VALUE_PAIR_EXTENSIONS
{
    + {static} TO_SERIALIZABLE_PAIR<TKey, TValue>(this KeyValuePair<TKey, TValue> pair)  SerializableKeyValuePair<TKey, TValue>
}
SerializableKeyValuePair *-- SERIALIZABLE_KEY_VALUE_PAIR_EXTENSIONS

class Configuration
{
    + Dictionary { get, set } Dictionary<String, Object>
    + ConfigurationArray { get, set } SerializableKeyValuePair<String, Object>[] 
}
SerializableKeyValuePair *-- Configuration

class Goals
{
    # int Score { get; set; }
    # Configuration Configuration { get; set; }

    + Goals(Configuration configuration)
    + Goals(Goals goals, Configuration configuration)
    # Goals(JSONGoals jsonGoals, Configuration configuration)
    # Init(JSONGoals jsonGoals, Configuration configuration) void
    # Init(Goals goals, Configuration configuration) void
    # Init(List<Goal> goals, int score, Configuration configuration) void
    # Init(Configuration configuration) void
    + DisplayScore() void
    + DisplayRequestSelectGoal() void
    + RequestSelectGoal() int
    + ListCurrent() void
    + ListAll() void
    # AddSimpleGoal() void
    # AddEternalGoal() void
    # AddChecklistGoal() void
    # ReuseCompletedGoal() void
    + Report() void
    # SaveGoals() void
    # LoadGoals() void
}
Goal *-- Goals
JSONGoals *-- Goals
Configuration *-- Goals

class JSONGoals
{
    + JSONGoals()
    + Score {get, set } int
    + Goals {get, set} List<JSONGoal>

    + JSONGoals(Goals? goals = null)
    # Convert(Goals goals) List<JSONGoal>
    # {static} CONVERT(Goals goals, List<JSONGoal> jsonGoals, int score, Configuration configuration) void
    # {static} CONVERT(Goals goals, JSONGoals jsonGoals, Configuration configuration) void
}
JSONGoal *-- JSONGoals
Goals *-- JSONGoals
Configuration *-- JSONGoals

class IGoal
{
    + DisplayRequestName() void
    + DisplayRequestDescription() void
    + DisplayRequestPointValue() void
    + RequestName() void
    + RequestDescription() void
    + RequestPointValue() void
}

class Goal
{
    # Name { get; set; } String
    # Description { get; set; } String
    # PointValue { get; set; } int
    # Configuration { get; set; } Configuration

    # Init(Configuration configuration, Boolean empty = false) void
    # Init(Goal goal) void
    + DisplayGoal(int index = -1) void
    + IsCompleted() Boolean
    + DisplayRequestName() void
    + DisplayRequestDescription() void
    + DisplayRequestPointValue() void
    + RequestName() void
    + RequestDescription() void
    + RequestPointValue() void
    + Report() int
}
IGoal <|-- Goal
JSONGoal *-- Goal
Configuration *-- Goal

class JSONGoal
{
    + Name { get, set } String
    + Description { get, set } String
    + PointValue { get, set } int
}
Goal <|-- JSONGoal
IGoal <|-- JSONGoal

class SimpleGoal
{
    # Completed { get, set } Boolean

    + SimpleGoal(Configuration configuration, Boolean empty =false)
    + SimpleGoal(Goal goal)
    # Init(Configuration configuration, Boolean empty = false) void
    # {static} IS_COMPLETED(SimpleGoal goal) Boolean
    # IsCompleted() Boolean
    # {static} DISPLAY_GOAL(SimpleGoal goal, Configuration configuration, int index = -1) void
    + DisplayGoal(int index = -1) void
    # {static} REPORT(SimpleGoal goal) int
    + Report() int
    + {static} SimpleGoal(JSONGoal goal) operator
}
Goal <|-- SimpleGoal
Configuration *-- SimpleGoal
JSONSimpleGoal *-- SimpleGoal

class JSONSimpleGoal
{
    + Completed { get, set } Boolean

    + JSONSimpleGoal()
    + JSONSimpleGoal(Goal goal)
    + DisplayGoal(int index = -1) void
    + IsCompleted() Boolean
    + Report() int
}
JSONGoal <|-- JSONSimpleGoal
SimpleGoal *-- JSONSimpleGoal

class EternalGoal
{
    + EternalGoal(Configuration configuration, Boolean empty = false)
    + EternalGoal(Goal goal)
    # Init(Configuration configuration, Boolean empty = false) void
    + DisplayRequestPointValue() void
    # {static} IS_COMPLETED(EternalGoal goal) Boolean
    + IsCompleted() Boolean
    # {static} DISPLAY_GOAL(EternalGoal goal, Configuration configuration, int index = -1) void
    + DisplayGoal(int index = -1) void
    # {static} REPORT(EternalGoal goal) int
    + Report() int
    + {static} EternalGoal(JSONGoal goal) operator
}
Goal <|-- EternalGoal
Configuration *-- EternalGoal
JSONEternalGoal *-- EternalGoal

class JSONEternalGoal
{
    + JSONEternalGoal()
    + JSONEternalGoal(Goal goal)
    + DisplayGoal(int index = -1) void
    + IsCompleted() Boolean
    + Report() int
}
JSONGoal <|-- JSONEternalGoal
EternalGoal *-- JSONEternalGoal

class ChecklistGoal
{
    # TargetNumberOfTimes { get, set } int
    # NumberOfTimes { get, set } int
    # BonusPointValue { get, set } int

    + ChecklistGoal(Configuration configuration, Boolean empty = false)
    + ChecklistGoal(Goal goal)
    # Init(Configuration configuration, Boolean empty = false) void
    + DisplayRequestPointValue() void
    + DisplayRequestNumberOfTimes() void
    + DisplayRequestBonusPoints() void
    + RequestNumberOfTimes() void
    + RequestBonusPoints() void
    # {static} IS_COMPLETED(ChecklistGoal goal) Boolean
    + IsCompleted() Boolean
    # {static} DISPLAY_GOAL(ChecklistGoal goal, Configuration configuration, int index = -1) void
    + DisplayGoal(int index = -1) void
    # {static} REPORT(ChecklistGoal goal) int
    + Report() int
    + {static} ChecklistGoal(JSONGoal goal) operator
}
Goal <|-- ChecklistGoal
Configuration *-- ChecklistGoal
JSONChecklistGoal *-- ChecklistGoal

class JSONChecklistGoal
{
    + TargetNumberOfTimes { get, set } int
    + NumberOfTimes { get, set } int
    + BonusPointValue { get, set } int

    + JSONChecklistGoal()
    + JSONChecklistGoal(Goal goal)
    + DisplayGoal(int index = -1) void
    + IsCompleted() Boolean
    + Report() int
}
JSONGoal <|-- JSONChecklistGoal
ChecklistGoal *-- JSONChecklistGoal

@enduml